{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/OrderControl/OrderControl.tsx","components/PeopleTable/PeopleTable.tsx","components/PeopleTable/useSortPeople.ts","components/PeopleTable/useFilterPeople.ts","components/PeopleFilters/PeopleFilters.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","useSearchParams","searchParams","to","toString","classNames","PersonItem","selectedPerson","born","died","mother","motherName","father","fatherName","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","search","OrderControl","sortBy","currentSort","get","nextSortOrder","has","sort","order","getSearchParams","PeopleTable","people","useParams","sortedPeople","sortParams","orderParams","a","b","useSortPeople","queryFilter","toLocaleLowerCase","sexFilter","centuriesFilter","getAll","filter","toLowerCase","includes","length","Math","ceil","useFilterPeople","map","find","parent","PeopleFilters","setSearchParams","getCenturySearchParams","century","allCenturies","current","String","type","placeholder","onChange","event","query","target","centuries","PeoplePage","useState","setPeople","error","setError","isLoading","setIsLoading","useEffect","getPeople","data","catch","finally","NotFoundPage","App","role","isActive","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.629cb116.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link to={`/people/${slug}?${searchParams.toString()}`} className={classNames({ 'has-text-danger': (sex === 'f') })}>\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  person: Person\n  selectedPerson: string | undefined\n};\n\nexport const PersonItem: React.FC<Props> = ({ person, selectedPerson }) => {\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': selectedPerson === person.slug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      {person.mother ? (\n        <td>\n          <PersonLink person={person.mother} />\n        </td>\n      ) : (\n        <td>{person.motherName || '-'}</td>\n      )}\n\n      {person.father ? (\n        <td>\n          <PersonLink person={person.father} />\n        </td>\n      ) : (\n        <td>{person.fatherName || '-'}</td>\n      )}\n\n    </tr>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { SearchLink } from '../SearchLink';\n\ntype Props = {\n  sortBy: string\n};\n\nexport const OrderControl: React.FC<Props> = ({ sortBy }) => {\n  const [searchParams] = useSearchParams();\n\n  const getSearchParams = () => {\n    const currentSort = searchParams.get('sort');\n\n    let nextSortOrder = null;\n\n    if (!searchParams.has('order') && currentSort === sortBy) {\n      nextSortOrder = 'desc';\n    }\n\n    return {\n      sort: searchParams.has('order') && currentSort === sortBy ? null : sortBy,\n      order: nextSortOrder,\n    };\n  };\n\n  return (\n    <SearchLink params={getSearchParams()}>\n      <span className=\"icon\">\n        <i className={\n          classNames('fas',\n            {\n              'fa-sort': searchParams.get('sort') !== sortBy,\n              'fa-sort-up': searchParams.get('sort') === sortBy\n                && !searchParams.has('order'),\n              'fa-sort-down': searchParams.get('sort') === sortBy\n                && searchParams.has('order'),\n            })\n        }\n        />\n      </span>\n    </SearchLink>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonItem } from '../PersonItem/PersonItem';\nimport { OrderControl } from '../OrderControl/OrderControl';\nimport { useFilterPeople } from './useFilterPeople';\nimport { useSortPeople } from './useSortPeople';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug: selectedPerson } = useParams();\n\n  const peopleWithParents: Person[] = people.map((person) => {\n    const father = people.find((parent) => person.fatherName === parent.name);\n    const mother = people.find((parent) => person.motherName === parent.name);\n\n    return {\n      ...person,\n      father,\n      mother,\n    };\n  });\n\n  const filteredPeople = useFilterPeople(peopleWithParents);\n  const sortedPeople = useSortPeople(filteredPeople);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <OrderControl sortBy=\"name\" />\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <OrderControl sortBy=\"sex\" />\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <OrderControl sortBy=\"born\" />\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <OrderControl sortBy=\"died\" />\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {sortedPeople.map((person) => (\n          <PersonItem\n            person={person}\n            key={person.slug}\n            selectedPerson={selectedPerson}\n          />\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\nexport const useSortPeople = (people: Person[]) => {\n  const [searchParams] = useSearchParams();\n\n  const sortParams = searchParams.get('sort') as keyof Person;\n  const orderParams = searchParams.get('order');\n\n  const sortedPeople = people.sort((a, b) => {\n    if (sortParams) {\n      if (a[sortParams] > b[sortParams]) {\n        return orderParams === 'desc' ? 1 : -1;\n      }\n\n      if (a[sortParams] < b[sortParams]) {\n        return orderParams === 'desc' ? -1 : 1;\n      }\n    }\n\n    return 0;\n  });\n\n  return sortedPeople;\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\nexport const useFilterPeople = (people: Person[]) => {\n  const [searchParams] = useSearchParams();\n\n  const queryFilter = searchParams.get('query')?.toLocaleLowerCase();\n  const sexFilter = searchParams.get('sex');\n  const centuriesFilter = searchParams.getAll('centuries');\n\n  const filterPeople = people.filter((person) => {\n    if (sexFilter && person.sex !== sexFilter) {\n      return false;\n    }\n\n    if (queryFilter\n      && !person.name.toLowerCase().includes(queryFilter)\n      && !person.motherName?.toLowerCase().includes(queryFilter)\n      && !person.fatherName?.toLowerCase().includes(queryFilter)\n    ) {\n      return false;\n    }\n\n    if (centuriesFilter.length > 0\n      && !centuriesFilter.includes(Math.ceil(person.born / 100).toString())) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return filterPeople;\n};\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from '../SearchLink';\nimport { getSearchWith } from '../../utils/searchHelper';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const getCenturySearchParams = (century: string) => {\n    const allCenturies = searchParams.getAll('centuries');\n\n    return allCenturies.includes(century)\n      ? allCenturies.filter((current) => current !== century)\n      : [String(century), ...allCenturies];\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          params={{ sex: null }}\n          className={classNames({\n            'is-active': !searchParams.has('sex'),\n          })}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          params={{ sex: 'f' }}\n          className={classNames({\n            'is-active': searchParams.get('sex') === 'f',\n          })}\n        >\n          Female\n        </SearchLink>\n        <SearchLink\n          params={{ sex: 'm' }}\n          className={classNames({\n            'is-active': searchParams.get('sex') === 'm',\n          })}\n        >\n          Male\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={searchParams.has('query')\n              ? String(searchParams.get('query'))\n              : ''}\n            onChange={(event) => {\n              const currentParams = getSearchWith(searchParams, {\n                query: event.target.value || null,\n              });\n\n              setSearchParams(currentParams);\n            }}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {[16, 17, 18, 19, 20].map((century) => {\n              return (\n                <SearchLink\n                  key={century}\n                  data-cy=\"century\"\n                  className={\n                    classNames('button mr-1', {\n                      'is-info': searchParams.getAll('centuries')\n                        .includes(String(century)),\n                    })\n                  }\n                  params={{\n                    centuries: getCenturySearchParams(String(century)),\n                  }}\n                >\n                  {century}\n                </SearchLink>\n              );\n            })}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={\n                classNames('button is-success',\n                  { 'is-outlined': searchParams.has('centuries') })\n              }\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            sex: null, centuries: null, query: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader/Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { PeopleFilters } from '../PeopleFilters/PeopleFilters';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getPeople()\n      .then((data) => setPeople(data))\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              { isLoading\n                ? <Loader />\n                : error && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                )}\n\n              { (!error && people.length === 0 && !isLoading) && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {(!error && !!people.length && !isLoading)\n          && <PeopleTable people={people} />}\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  NavLink, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => {\n              return classNames('navbar-item',\n                { 'has-background-grey-lighter': isActive });\n            }}\n          >\n            Home\n\n          </NavLink>\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => {\n              return classNames('navbar-item',\n                { 'has-background-grey-lighter': isActive });\n            }}\n          >\n            People\n\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug?\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}